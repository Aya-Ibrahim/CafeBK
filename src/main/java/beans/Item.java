package beans;
// Generated May 12, 2017 3:22:27 PM by Hibernate Tools 4.3.1


import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Item generated by hbm2java
 */
@Entity
@Table(name="item"
    ,catalog="arkancafe"
)
public class Item  implements java.io.Serializable {


     private Integer itemId;
//     private Item item;
     private Service service;
     private String itemName;
     private boolean isActive;
     private Integer sortOrder;
     private BigDecimal price;
     private Set<Addition> additions = new HashSet<Addition>(0);
     private Set<Orderline> orderlines = new HashSet<Orderline>(0);
     private Set<ItemIngredient> itemIngredients = new HashSet<ItemIngredient>(0);
//     private Set<Item> items = new HashSet<Item>(0);

    public Item() {
    }

	
    public Item(Service service, String itemName, boolean isActive, BigDecimal price) {
        this.service = service;
        this.itemName = itemName;
        this.isActive = isActive;
        this.price = price;
    }
    public Item(Service service, String itemName, boolean isActive, Integer sortOrder, BigDecimal price, Set<Addition> additions, Set<Orderline> orderlines, Set<ItemIngredient> itemIngredients) {
//       this.item = item;
       this.service = service;
       this.itemName = itemName;
       this.isActive = isActive;
       this.sortOrder = sortOrder;
       this.price = price;
       this.additions = additions;
       this.orderlines = orderlines;
       this.itemIngredients = itemIngredients;
//       this.items = items;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="item_id", unique=true, nullable=false)
    public Integer getItemId() {
        return this.itemId;
    }
    
    public void setItemId(Integer itemId) {
        this.itemId = itemId;
    }

//@ManyToOne(fetch=FetchType.LAZY)
//    @JoinColumn(name="main_item_id")
//    public Item getItem() {
//        return this.item;
//    }
//    
//    public void setItem(Item item) {
//        this.item = item;
//    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="service_id", nullable=false)
    public Service getService() {
        return this.service;
    }
    
    public void setService(Service service) {
        this.service = service;
    }

    
    @Column(name="item_name", nullable=false, length=50)
    public String getItemName() {
        return this.itemName;
    }
    
    public void setItemName(String itemName) {
        this.itemName = itemName;
    }

    
    @Column(name="is_active", nullable=false)
    public boolean isIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    
    @Column(name="sort_order")
    public Integer getSortOrder() {
        return this.sortOrder;
    }
    
    public void setSortOrder(Integer sortOrder) {
        this.sortOrder = sortOrder;
    }

    
    @Column(name="price", nullable=false, precision=10, scale=3)
    public BigDecimal getPrice() {
        return this.price;
    }
    
    public void setPrice(BigDecimal price) {
        this.price = price;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set<Addition> getAdditions() {
        return this.additions;
    }
    
    public void setAdditions(Set<Addition> additions) {
        this.additions = additions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set<Orderline> getOrderlines() {
        return this.orderlines;
    }
    
    public void setOrderlines(Set<Orderline> orderlines) {
        this.orderlines = orderlines;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
    public Set<ItemIngredient> getItemIngredients() {
        return this.itemIngredients;
    }
    
    public void setItemIngredients(Set<ItemIngredient> itemIngredients) {
        this.itemIngredients = itemIngredients;
    }

//@OneToMany(fetch=FetchType.LAZY, mappedBy="item")
//    public Set<Item> getItems() {
//        return this.items;
//    }
//    
//    public void setItems(Set<Item> items) {
//        this.items = items;
//    }




}


